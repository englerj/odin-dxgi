package dxgi

import "core:sys/win32"

@private Hresult :: win32.Hresult

CREATE_FACTORY_DEBUG :: 0x1

IID_Factory2  :: Guid {0x50c83a1c, 0xe072, 0x4c48, {0x87, 0xb0, 0x36, 0x30, 0xfa, 0x36, 0xa6, 0xd0}}
IID_Factory3  :: Guid {0x25483823, 0xcd46, 0x4c7d, {0x86, 0xca, 0x47, 0xaa, 0x95, 0xb8, 0x37, 0xbd}}

Alpha_Mode :: enum u32 {
    Unspecified   = 0,
    Premultiplied = 1,
    Straight      = 2,
    Ignore        = 3,
}

Buffer_Usage :: enum u32 {
    Shader_Input         = 0x00000010,
    Render_Target_Output = 0x00000020,
    Back_Buffer          = 0x00000040,
    Shared               = 0x00000080,
    Read_Only            = 0x00000100,
    Discard_On_Present   = 0x00000200,
    Unordered_Access     = 0x00000400,
}

Format :: enum u32 {
    Unknown	                    = 0,
    R32G32B32A32_Typeless       = 1,
    R32G32B32A32_Float          = 2,
    R32G32B32A32_Uint           = 3,
    R32G32B32A32_Sint           = 4,
    R32G32B32_Typeless          = 5,
    R32G32B32_Float             = 6,
    R32G32B32_Uint              = 7,
    R32G32B32_Sint              = 8,
    R16G16B16A16_Typeless       = 9,
    R16G16B16A16_Float          = 10,
    R16G16B16A16_Unorm          = 11,
    R16G16B16A16_Uint           = 12,
    R16G16B16A16_Snorm          = 13,
    R16G16B16A16_Sint           = 14,
    R32G32_Typeless             = 15,
    R32G32_Float                = 16,
    R32G32_Uint                 = 17,
    R32G32_Sint                 = 18,
    R32G8X24_Typeless           = 19,
    D32_Float_S8X24_Uint        = 20,
    R32_Float_X8X24_Typeless    = 21,
    X32_Typeless_G8X24_Uint     = 22,
    R10G10B10A2_Typeless        = 23,
    R10G10B10A2_Unorm           = 24,
    R10G10B10A2_Uint            = 25,
    R11G11B10_Float             = 26,
    R8G8B8A8_Typeless           = 27,
    R8G8B8A8_Unorm              = 28,
    R8G8B8A8_Unorm_Srgb         = 29,
    R8G8B8A8_Uint               = 30,
    R8G8B8A8_Snorm              = 31,
    R8G8B8A8_Sint               = 32,
    R16G16_Typeless             = 33,
    R16G16_Float                = 34,
    R16G16_Unorm                = 35,
    R16G16_Uint                 = 36,
    R16G16_Snorm                = 37,
    R16G16_Sint                 = 38,
    R32_Typeless                = 39,
    D32_Float                   = 40,
    R32_Float                   = 41,
    R32_Uint                    = 42,
    R32_Sint                    = 43,
    R24G8_Typeless              = 44,
    D24_Unorm_S8_Uint           = 45,
    R24_Unorm_X8_Typeless       = 46,
    X24_Typeless_G8_Uint        = 47,
    R8G8_Typeless               = 48,
    R8G8_Unorm                  = 49,
    R8G8_Uint                   = 50,
    R8G8_Snorm                  = 51,
    R8G8_Sint                   = 52,
    R16_Typeless                = 53,
    R16_Float                   = 54,
    D16_Unorm                   = 55,
    R16_Unorm                   = 56,
    R16_Uint                    = 57,
    R16_Snorm                   = 58,
    R16_Sint                    = 59,
    R8_Typeless                 = 60,
    R8_Unorm                    = 61,
    R8_Uint                     = 62,
    R8_Snorm                    = 63,
    R8_Sint                     = 64,
    A8_Unorm                    = 65,
    R1_Unorm                    = 66,
    R9G9B9E5_Sharedexp          = 67,
    R8G8_B8G8_Unorm             = 68,
    G8R8_G8B8_Unorm             = 69,
    BC1_Typeless                = 70,
    BC1_Unorm                   = 71,
    BC1_Unorm_Srgb              = 72,
    BC2_Typeless                = 73,
    BC2_Unorm                   = 74,
    BC2_Unorm_Srgb              = 75,
    BC3_Typeless                = 76,
    BC3_Unorm                   = 77,
    BC3_Unorm_Srgb              = 78,
    BC4_Typeless                = 79,
    BC4_Unorm                   = 80,
    BC4_Snorm                   = 81,
    BC5_Typeless                = 82,
    BC5_Unorm                   = 83,
    BC5_Snorm                   = 84,
    B5G6R5_Unorm                = 85,
    B5G5R5A1_Unorm              = 86,
    B8G8R8A8_Unorm              = 87,
    B8G8R8X8_Unorm              = 88,
    R10G10B10_XR_Bias_A2_Unorm  = 89,
    B8G8R8A8_Typeless           = 90,
    B8G8R8A8_Unorm_Srgb         = 91,
    B8G8R8X8_Typeless           = 92,
    B8G8R8X8_Unorm_Srgb         = 93,
    BC6H_Typeless               = 94,
    BC6H_Uf16                   = 95,
    BC6H_Sf16                   = 96,
    BC7_Typeless                = 97,
    BC7_Unorm                   = 98,
    BC7_Unorm_Srgb              = 99,
    AYUV                        = 100,
    Y410                        = 101,
    Y416                        = 102,
    NV12                        = 103,
    P010                        = 104,
    P016                        = 105,
    YUV_420_Opaque              = 106,
    YUY2                        = 107,
    Y210                        = 108,
    Y216                        = 109,
    NV11                        = 110,
    AI44                        = 111,
    IA44                        = 112,
    P8                          = 113,
    A8P8                        = 114,
    B4G4R4A4_Unorm              = 115,
    P208                        = 130,
    V208                        = 131,
    V408                        = 132,
}

Guid :: struct {
    data_1  : u32,
    data_2  : u16,
    data_3  : u16,
    data_4  : [8]u8,
}

Present_Flags :: enum u32 {
    None                  = 0x00000000,
    Test                  = 0x00000001,
    Do_Not_Sequence       = 0x00000002,
    Restart               = 0x00000004,
    Do_Not_Wait           = 0x00000008,
    Stereo_Prefer_Right   = 0x00000010,
    Stereo_Temporary_Mono = 0x00000020,
    Restrict_To_Output    = 0x00000040,
    Use_Duration          = 0x00000100,
    Allow_Tearing         = 0x00000200,
}

Sample_Desc :: struct {
    count   : u32,
    quality : u32,
}

Scaling :: enum u32 {
    Stretch              = 0,
    None                 = 1,
    Aspect_Ratio_Stretch = 2,
}

Swap_Effect :: enum u32 {
    Discard          = 0,
    Sequenctial      = 1,
    Flip_Sequenctial = 3,
    Flip_Discard     = 4,
}